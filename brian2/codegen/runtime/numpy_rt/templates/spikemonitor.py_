{# USES_VARIABLES {i, t, _spikespace, _count, _clock_t, _source_start, _source_stop} #}
import numpy as np
_spikes = {{_spikespace}}[:{{_spikespace}}[-1]]
# Take subgroups into account
_spikes = _spikes[(_spikes >= _source_start) & (_spikes < _source_stop)]
_spikes -= _source_start
_n_spikes = len(_spikes)
if _n_spikes > 0:

    _curlen = len({{_dynamic_t}})
    _newlen = _curlen + _n_spikes
    _owner.resize(_newlen)
    {{_dynamic_t}}[_curlen:_newlen] = _clock_t
    {{_dynamic_i}}[_curlen:_newlen] = _spikes

    {{_count}}[_spikes] += 1
